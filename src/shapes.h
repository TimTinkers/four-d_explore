#pragma once
#include <vector>
#include <glm/vec4.hpp>

const std::vector<glm::vec4> CUBE = {
	glm::vec4(-0.5, -0.5, 0.5, -0.5),
	glm::vec4(-0.5, -0.5, 0.5, 0.5),

	glm::vec4(-0.5, -0.5, 0.5, 0.5),
	glm::vec4(-0.5, 0.5, 0.5, 0.5),

	glm::vec4(-0.5, 0.5, 0.5, 0.5),
	glm::vec4(-0.5, 0.5, 0.5, -0.5),

	glm::vec4(-0.5, 0.5, 0.5, -0.5),
	glm::vec4(-0.5, -0.5, 0.5, -0.5),

	glm::vec4(-0.5, -0.5, 0.5, -0.5),
	glm::vec4(0.5, -0.5, 0.5, -0.5),

	glm::vec4(-0.5, 0.5, 0.5, -0.5),
	glm::vec4(0.5, 0.5, 0.5, -0.5),

	glm::vec4(-0.5, 0.5, 0.5, 0.5),
	glm::vec4(0.5, 0.5, 0.5, 0.5),

	glm::vec4(-0.5, -0.5, 0.5, 0.5),
	glm::vec4(0.5, -0.5, 0.5, 0.5),

	glm::vec4(0.5, -0.5, 0.5, 0.5),
	glm::vec4(0.5, 0.5, 0.5, 0.5),

	glm::vec4(0.5, 0.5, 0.5, 0.5),
	glm::vec4(0.5, 0.5, 0.5, -0.5),

	glm::vec4(0.5, 0.5, 0.5, -0.5),
	glm::vec4(0.5, -0.5, 0.5, -0.5),

	glm::vec4(0.5, -0.5, 0.5, -0.5),
	glm::vec4(0.5, -0.5, 0.5, 0.5),
};

const std::vector<glm::vec4> TESSERACT = {

	// First cube.
	glm::vec4(-0.5, -0.5, 0.5, -0.5),
	glm::vec4(-0.5, -0.5, 0.5, 0.5),
	glm::vec4(-0.5, -0.5, 0.5, 0.5),
	glm::vec4(-0.5, 0.5, 0.5, 0.5),
	glm::vec4(-0.5, 0.5, 0.5, 0.5),
	glm::vec4(-0.5, 0.5, 0.5, -0.5),
	glm::vec4(-0.5, 0.5, 0.5, -0.5),
	glm::vec4(-0.5, -0.5, 0.5, -0.5),
	glm::vec4(-0.5, -0.5, 0.5, -0.5),
	glm::vec4(0.5, -0.5, 0.5, -0.5),
	glm::vec4(-0.5, 0.5, 0.5, -0.5),
	glm::vec4(0.5, 0.5, 0.5, -0.5),
	glm::vec4(-0.5, 0.5, 0.5, 0.5),
	glm::vec4(0.5, 0.5, 0.5, 0.5),
	glm::vec4(-0.5, -0.5, 0.5, 0.5),
	glm::vec4(0.5, -0.5, 0.5, 0.5),
	glm::vec4(0.5, -0.5, 0.5, 0.5),
	glm::vec4(0.5, 0.5, 0.5, 0.5),
	glm::vec4(0.5, 0.5, 0.5, 0.5),
	glm::vec4(0.5, 0.5, 0.5, -0.5),
	glm::vec4(0.5, 0.5, 0.5, -0.5),
	glm::vec4(0.5, -0.5, 0.5, -0.5),
	glm::vec4(0.5, -0.5, 0.5, -0.5),
	glm::vec4(0.5, -0.5, 0.5, 0.5),

	// Second cube.
	glm::vec4(-0.5, -0.5, -0.5, -0.5),
	glm::vec4(-0.5, -0.5, -0.5, 0.5),
	glm::vec4(-0.5, -0.5, -0.5, 0.5),
	glm::vec4(-0.5, 0.5, -0.5, 0.5),
	glm::vec4(-0.5, 0.5, -0.5, 0.5),
	glm::vec4(-0.5, 0.5, -0.5, -0.5),
	glm::vec4(-0.5, 0.5, -0.5, -0.5),
	glm::vec4(-0.5, -0.5, -0.5, -0.5),
	glm::vec4(-0.5, -0.5, -0.5, -0.5),
	glm::vec4(0.5, -0.5, -0.5, -0.5),
	glm::vec4(-0.5, 0.5, -0.5, -0.5),
	glm::vec4(0.5, 0.5, -0.5, -0.5),
	glm::vec4(-0.5, 0.5, -0.5, 0.5),
	glm::vec4(0.5, 0.5, -0.5, 0.5),
	glm::vec4(-0.5, -0.5, -0.5, 0.5),
	glm::vec4(0.5, -0.5, -0.5, 0.5),
	glm::vec4(0.5, -0.5, -0.5, 0.5),
	glm::vec4(0.5, 0.5, -0.5, 0.5),
	glm::vec4(0.5, 0.5, -0.5, 0.5),
	glm::vec4(0.5, 0.5, -0.5, -0.5),
	glm::vec4(0.5, 0.5, -0.5, -0.5),
	glm::vec4(0.5, -0.5, -0.5, -0.5),
	glm::vec4(0.5, -0.5, -0.5, -0.5),
	glm::vec4(0.5, -0.5, -0.5, 0.5),

	// Linking edges.
	glm::vec4(-0.5, -0.5, 0.5, -0.5),
	glm::vec4(-0.5, -0.5, -0.5, -0.5),
	glm::vec4(-0.5, -0.5, 0.5, 0.5),
	glm::vec4(-0.5, -0.5, -0.5, 0.5),
	glm::vec4(-0.5, 0.5, 0.5, 0.5),
	glm::vec4(-0.5, 0.5, -0.5, 0.5),
	glm::vec4(-0.5, 0.5, 0.5, -0.5),
	glm::vec4(-0.5, 0.5, -0.5, -0.5),
	glm::vec4(0.5, -0.5, 0.5, 0.5),
	glm::vec4(0.5, -0.5, -0.5, 0.5),
	glm::vec4(0.5, 0.5, 0.5, 0.5),
	glm::vec4(0.5, 0.5, -0.5, 0.5),
	glm::vec4(0.5, 0.5, 0.5, -0.5),
	glm::vec4(0.5, 0.5, -0.5, -0.5),
	glm::vec4(0.5, -0.5, 0.5, -0.5),
	glm::vec4(0.5, -0.5, -0.5, -0.5),
};